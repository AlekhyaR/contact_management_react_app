{"ast":null,"code":"var _jsxFileName = \"/Users/alekhya/alekhya/my_projects/react_contact_app/src/components/App.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and components\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define a key to use for local storage\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const navigate = useNavigate();\n\n  // Initialize state to hold the list of contacts\n  const [contacts, setContacts] = useState([]);\n\n  // Handler to add a new contact\n  const addContactHandler = contact => {\n    // Spread the existing contacts and add the new contact to the array\n    setContacts([...contacts, {\n      id: uuidv4(),\n      ...contact\n    }]);\n  };\n  const removeContactHandler = id => {\n    // create copy of contacts \n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  // useEffect to retrieve contacts from local storage when the component mounts\n  useEffect(() => {\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retrieveContacts.length > 0) {\n      setContacts(retrieveContacts);\n    }\n  }, []);\n\n  // useEffect to store the contacts in local storage whenever contacts state changes\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Render the UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(ContactList, {\n            contacts: contacts,\n            getContactId: removeContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(AddContact, {\n            addContactHandler: addContactHandler,\n            navigate: navigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YvVJJEwM6B0TMQr7ZtIN9cPqIlY=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useNavigate","v4","uuidv4","Header","AddContact","ContactList","jsxDEV","_jsxDEV","App","_s","LOCAL_STORAGE_KEY","navigate","contacts","setContacts","addContactHandler","contact","id","removeContactHandler","newContactList","filter","retrieveContacts","JSON","parse","localStorage","getItem","length","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","element","getContactId","_c","$RefreshReg$"],"sources":["/Users/alekhya/alekhya/my_projects/react_contact_app/src/components/App.js"],"sourcesContent":["// Import necessary libraries and components\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\n\nfunction App() {\n  // Define a key to use for local storage\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const navigate = useNavigate();\n\n  // Initialize state to hold the list of contacts\n  const [contacts, setContacts] = useState([]);\n\n  // Handler to add a new contact\n  const addContactHandler = (contact) => {\n    // Spread the existing contacts and add the new contact to the array\n    setContacts([...contacts, {id: uuidv4(), ...contact}]);\n  };\n\n  const removeContactHandler = (id) => {\n    // create copy of contacts \n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    })\n    setContacts(newContactList)\n  }\n\n  // useEffect to retrieve contacts from local storage when the component mounts\n  useEffect(() => {\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retrieveContacts.length > 0) {\n      setContacts(retrieveContacts);\n    }\n  }, []); \n\n  // useEffect to store the contacts in local storage whenever contacts state changes\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Render the UI\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/\" exact element={\n            <ContactList \n              contacts={contacts} \n              getContactId={removeContactHandler}/>\n            } \n          />\n          <Route path=\"/add\" element={\n              <AddContact \n                addContactHandler={addContactHandler} navigate={navigate}/>\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}