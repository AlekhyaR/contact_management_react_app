{"ast":null,"code":"var _jsxFileName = \"/Users/alekhya/alekhya/my_projects/react_contact_app/src/components/App.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and components\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport api from \"../api/contacts\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport EditContact from \"./EditContact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize state to hold the list of contacts\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // retrieve contacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  // Handler to add a new contact\n  const addContactHandler = async contact => {\n    const request = {\n      id: uuidv4(),\n      ...contact\n    };\n    // we are using api to save our data\n    const response = await api.post(\"/contacts\", request);\n\n    // Spread the existing contacts and add the new contact to the array\n    setContacts([...contacts, response.data]);\n  };\n  const updateContactHandler = async contact => {};\n  const removeContactHandler = async id => {\n    await api.delete(`\\contacts\\${id}`);\n    // create copy of contacts \n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n    if (searchTerm) {}\n  };\n\n  // useEffect to retrieve contacts from local storage when the component mounts\n  useEffect(() => {\n    // const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retrieveContacts.length > 0) {\n    //   setContacts(retrieveContacts);\n    // }\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts.length > 0) setContacts(allContacts);\n    };\n    getAllContacts();\n  }, []);\n\n  // useEffect to store the contacts in local storage whenever contacts state changes\n  useEffect(() => {\n    // localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Render the UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(ContactList, {\n            contacts: contacts,\n            getContactId: removeContactHandler,\n            term: searchTerm,\n            searchKeyword: searchHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(AddContact, {\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact/:id\",\n          element: /*#__PURE__*/_jsxDEV(ContactDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditContact, {\n            updateContactHandler: updateContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KWlPmR1Tf5RI0dJFBfbrG8nFzbY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","v4","uuidv4","api","Header","AddContact","ContactList","ContactDetail","EditContact","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","searchTerm","setSearchTerm","retrieveContacts","response","get","data","addContactHandler","contact","request","id","post","updateContactHandler","removeContactHandler","delete","newContactList","filter","searchHandler","getAllContacts","allContacts","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","element","getContactId","term","searchKeyword","_c","$RefreshReg$"],"sources":["/Users/alekhya/alekhya/my_projects/react_contact_app/src/components/App.js"],"sourcesContent":["// Import necessary libraries and components\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport api from \"../api/contacts\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport EditContact from \"./EditContact\";\n\nfunction App() {\n  // Initialize state to hold the list of contacts\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // retrieve contacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  }\n\n  // Handler to add a new contact\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuidv4(),\n      ...contact,\n    }\n    // we are using api to save our data\n    const response = await api.post(\"/contacts\", request);\n\n    // Spread the existing contacts and add the new contact to the array\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async (contact) => {\n\n  }\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`\\contacts\\${id}`)\n    // create copy of contacts \n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    })\n    setContacts(newContactList)\n  }\n\n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm ) {\n\n    }\n  }\n\n  // useEffect to retrieve contacts from local storage when the component mounts\n  useEffect(() => {\n    // const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retrieveContacts.length > 0) {\n    //   setContacts(retrieveContacts);\n    // }\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts.length > 0) setContacts(allContacts);\n    }\n    getAllContacts();\n  }, []); \n\n  // useEffect to store the contacts in local storage whenever contacts state changes\n  useEffect(() => {\n    // localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Render the UI\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/\" exact element={\n            <ContactList \n              contacts={contacts} \n              getContactId={removeContactHandler}\n              term={searchTerm}\n              searchKeyword={searchHandler}/>\n            } \n          />\n          <Route path=\"/add\" element={\n              <AddContact \n                addContactHandler={addContactHandler}/>\n            }\n          />\n          <Route path=\"/contact/:id\" element={<ContactDetail/>}/>\n          <Route path=\"/edit\" element={<EditContact updateContactHandler={updateContactHandler}/>}/> \n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}